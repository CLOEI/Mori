name: Build and Release

'on':
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: Mori
            asset_name: mori-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: Mori.exe
            asset_name: mori-windows-x86_64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libxcb-render0-dev \
          libxcb-shape0-dev \
          libxcb-xfixes0-dev \
          libxkbcommon-dev \
          libssl-dev \
          libgtk-3-dev \
          libxcb1-dev \
          pkg-config

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Strip binary (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/mori-linux-x86_64/Mori
          artifacts/mori-windows-x86_64.exe/Mori.exe
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          ## Release ${{ github.ref_name }}
          
          Cross-platform Growtopia companion built from commit ${{ github.sha }}.
          
          ### Downloads
          - **Linux x86_64**: `Mori` 
          - **Windows x86_64**: `Mori.exe`
          
          For installation and usage instructions, see the [README](https://github.com/CLOEI/Mori/blob/main/README.md).
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


